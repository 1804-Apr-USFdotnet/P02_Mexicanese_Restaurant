node('master'){
    stage('import'){
        try{
            git branch: 'Dev', url: 'https://github.com/1804-Apr-USFdotnet/P02_Mexicanese_Restaurant.git'
        } 
        catch (exc){
            slackError('import')
            throw exc
        }
    }
    stage('build'){
        try{
            dir('AngularLayer'){
                bat 'npm install'
                bat 'npm run build'
            }
        } 
        catch (exc){
            slackError('build')
            throw exc
        }
    }
    stage('test'){
        try{
            dir('AngularLayer'){
            
            }
        } 
        catch (exc){
            slackError('test')
            throw exc
        }
    }
    stage('analyze'){
        try {
            dir('AngularLayer') {

            }
        }
        catch (exc) {
            slackError('analyze')
            throw exc
        }
    }
    stage('package'){
        try{
            dir('AngularLayer') {
              bat 'npm run build -- --base-href /SiAmigos/ --prod'
            }
        } 
        catch (exc) {
            slackError('package')
            throw exc
        }
    }
    stage('deploy'){
        try {
            dir('AngularLayer'){
               bat "msdeploy -verb:sync -source:contentPath=\"%CD%\" -dest:contentPath=\"Default Web Site/SiAmigos\",wmsvc=ec2-34-230-40-222.compute-1.amazonaws.com,userName=Administrator,password=\"${env.Deploy_Password_AL}\" -enableRule:AppOffline -allowUntrusted"
           }  
        }
        catch (exc) {
            slackError('deploy')
            throw exc
        }
    }
}

def slackError(stageName) {
    slackSend color: 'danger', message: "${stageName} stage failed. [<${JOB_URL}|${env.JOB_NAME}> <${env.BUILD_URL}console|${env.BUILD_DISPLAY_NAME}>] [${currentBuild.durationString[0..-14]}]"
}
